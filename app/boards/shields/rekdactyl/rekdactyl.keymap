/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 /*
  *  west build -b rekdactyl -- -DSHIELD=rekdactyl_left -DZMK_CONFIG="/Users/rishi/Documents/GitHub/zmk-config/config"
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define COLEMAK 0
#define LOWER 1
#define RAISE 2
#define SYS 3
#define MEDIA 4

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping_term_ms = <200>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {

                        bindings = <
   &kp Q      &kp W  &kp F       &kp P &kp G      &kp J &kp L  &kp U         &kp Y   &kp SCLN 
   &hm LGUI A &kp R  &hm LCTRL S &kp T &kp D      &kp H &kp N  &hm RCTRL E   &kp I   &hm RGUI O
   &hm LALT Z &kp X  &kp C       &kp V &kp B      &kp K &kp M  &kp CMMA      &kp DOT &hm RALT FSLH
              &kp N1 &kp N2                                    &kp LC(MINUS) &kp LC(EQL)
                                    &kp HOME        &kp END
          &hm LSFT SPC &lt LOWER TAB &kp ESC        &kp DEL &lt RAISE BKSP &hm RSFT RET  
                                    &mo MEDIA       &lt SYS DEL
                        >;
                };

                lower_layer {
                        bindings = <
   &trans          &kp DQT    &kp LPAR    &kp RPAR      &kp AT            &trans    &kp N7 &kp N8 &kp N9  &trans
   &kp COLON       &kp SQT    &kp LBKT    &kp RBKT      &kp UNDER         &kp STAR  &kp N4 &kp N5 &kp N6  &kp RET
   &kp QMARK       &kp DLLR   &kp LBRC    &kp RBRC      &kp HASH          &kp FSLH  &kp N1 &kp N2 &kp N3  &kp RET
                   &trans     &trans                                                     &kp PLUS &kp MINUS
                                                        &trans             &trans
                                &trans     &trans       &trans             &kp DEL  &kp N0 &kp DOT
                                                        &trans             &trans
                        >;
                };
                
                raise_layer {
                        bindings = <
   &kp BSLH       &kp EXCL  &kp TILDE     &kp AMPS  &trans        &kp HOME  &kp PG_UP &kp PG_DN &kp END    &trans
   &hm LGUI FSLH  &kp MINUS &hm LCTL EQL  &kp PLUS  &kp STAR      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans
   &hm LALT PRCT  &kp LT    &kp PIPE      &kp GT    &kp CRRT      &trans    &trans    &trans    &trans     &trans
                  &trans    &trans                                                    &trans    &trans
                                                    &trans        &trans
                                     &trans &trans &trans        &trans &trans &trans
                                                    &trans        &trans

                        >;
                };

                sys_layer {
                        bindings = <
   &trans       &trans       &trans       &trans       &trans            &kp LA(LS(LC(N4)))    &kp F7   &kp F8     &kp F9  &kp F12    
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp LS(LC(N4))    &kp F4   &kp F5     &kp F6  &kp F11
   &bt BT_CLR   &trans       &out OUT_USB &out OUT_BLE &trans            &trans    &kp F1   &kp F2     &kp F3  &kp F10
                &trans    &trans                                                    &trans    &trans
                                                    &trans        &trans
                                     &trans  &trans &trans        &trans &trans &trans
                                                    &trans        &trans
                        >;
                };

                media_layer {
                        bindings = <
   &trans       &trans       &trans       &trans       &trans      &kp LA(LS(LC(N4)))    &kp F7   &kp F8     &kp F9  &kp F12    
   &trans       &kp K_VOL_DN &kp K_MUTE   &kp K_VOL_UP &trans      &kp LS(LC(N4))    &kp F4   &kp F5     &kp F6  &kp F11
   &trans       &kp K_PREV   &kp K_PP     &kp K_NEXT   &trans      &trans    &kp F1   &kp F2     &kp F3  &kp F10
                &trans    &trans                                                    &trans    &trans
                                                    &trans        &trans
                                     &trans &trans &trans        &trans &trans &trans
                                                    &trans        &trans
                        >;
                };
            };

};

